{"version":3,"sources":["components/Todoitem.jsx","components/Todos.jsx","components/layout/Header.js","components/pages/About.js","components/AddTodo.jsx","App.js","serviceWorker.js","index.js"],"names":["Todoitem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","style","styler","onChange","props","changer","bind","todo","id","marginRight","fontSize","type","title","description","className","float","backgroundColor","onClick","onremove","textDecoration","completed","padding","borderBottom","Component","Todos","margin","map","components_Todoitem","changed","Header","textAlign","color","react_router_dom","to","About","Fragment","AddTodo","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","state","e","setState","defineProperty","target","name","updatered","update","submit","preventDefault","add","onSubmit","display","flex","placeholder","onKeyUp","required","marginLeft","App","todolist","changeder","todos","remove","Axios","delete","then","result","toConsumableArray","filter","titled","descriptioned","numm","post","console","log","_this2","get","data","_this3","react_router","exact","path","render","components_AddTodo","components_Todos","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.04c1ef84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Todoitem extends Component {\r\n  render() {\r\n    return (\r\n      <div style={this.styler()}>\r\n        <h2>\r\n          <input\r\n            onChange={this.props.changer.bind(this, this.props.todo.id)}\r\n            style={{ marginRight: 20, fontSize: 30 }}\r\n            type=\"checkbox\"\r\n          />\r\n          {this.props.todo.title}\r\n          {\" : \"} {this.props.todo.description}\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            style={{ float: \"right\", backgroundColor: \"\" }}\r\n            //onClick={this.props.onremove.bind(this, this.props.todo.id)}\r\n            //OR\r\n            onClick={() => this.props.onremove(this.props.todo.id)}\r\n          >\r\n            X\r\n          </button>\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n  styler() {\r\n    return {\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\r\n      padding: 2,\r\n      borderBottom: \"1px #000 dotted\",\r\n      backgroundColor: \"lightgrey\"\r\n    };\r\n  }\r\n}\r\nexport default Todoitem;\r\n","import React, { Component } from \"react\";\r\nimport Todoitem from \"./Todoitem\";\r\nclass Todos extends Component {\r\n  componentDidMount() {\r\n    //alert(\"mounted\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <div style={{ margin: 30 }} />\r\n        {this.props.todo.map(todo => (\r\n          <Todoitem\r\n            changer={this.props.changed}\r\n            onremove={this.props.onremove}\r\n            todo={todo}\r\n            key={todo.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <header\r\n        style={{ textAlign: \"center\", color: \"white\", backgroundColor: \"#333\" }}\r\n      >\r\n        <h1 className=\"container\">TodoList Header</h1>\r\n        <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">\r\n          Home\r\n        </Link>{\" \"}\r\n        |{\" \"}\r\n        <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/about\">\r\n          About\r\n        </Link>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the about page</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  updatered = e => {\r\n    this.props.update(this.state.title, this.state.description);\r\n  };\r\n\r\n  submit = e => {\r\n    e.preventDefault();\r\n    this.props.add(this.state.title, this.state.description);\r\n    // this.state.title = \"\"((this.state.description = \"\"));\r\n    this.setState({ title: \"\", description: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit} style={{ display: \"flex\" }}>\r\n        <input\r\n          style={{ flex: \"5\" }}\r\n          type=\"text\"\r\n          placeholder=\"add todo\"\r\n          name=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n          onKeyUp={this.updatered}\r\n          required\r\n        />\r\n        <input\r\n          style={{ flex: \"5\", marginLeft: 30 }}\r\n          type=\"text\"\r\n          placeholder=\"description\"\r\n          name=\"description\"\r\n          value={this.state.description}\r\n          onChange={this.onChange}\r\n          onKeyUp={this.updatered}\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{ flex: \"1\" }}\r\n          value=\"submit\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos.jsx\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\n\nimport AddTodo from \"./components/AddTodo.jsx\";\nimport uuid from \"uuid\";\n//import logo from './logo.svg';\n//import Navbar from \"./components/navbar\";\nimport \"./App.css\";\nimport Axios from \"axios\";\n//import Counters from \"./components/counters\";\nclass App extends Component {\n  componentDidMount() {\n    let newdo = {\n      id: \"\",\n      title: \"\",\n      description: \"\",\n      completed: false\n    };\n    //alert(\"mounted\");\n    this.setState({\n      todolist: [...this.state.todolist, newdo]\n    });\n\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=5\").then(\n      result => this.setState({ todolist: result.data })\n    );\n  }\n  state = {\n    todolist: [\n      // {\n      //   id: uuid.v4(),\n      //   title: \"take out trash\",\n      //   description: \"c\",\n      //   completed: true\n      // },\n      // {\n      //   id: uuid.v4(),\n      //   title: \"take out tr\",\n      //   description: \"co\",\n      //   completed: false\n      // },\n      // { id: uuid.v4(), title: \"take out\", description: \"coo\", completed: true },\n      // { id: uuid.v4(), title: \"take\", description: \"cool\", completed: false }\n    ]\n  };\n\n  changeder = id => {\n    this.setState({\n      todos: this.state.todolist.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n  remove = id => {\n    // console.log(id);\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(\n      result =>\n        this.setState({\n          todolist: [...this.state.todolist.filter(todo => todo.id !== id)]\n        })\n    );\n\n    //OR\n    // let todolist = this.state.todolist.filter(c => c.id !== id);\n\n    // this.setState({ todolist });\n  };\n\n  update = (titled, descriptioned) => {\n    let numm = this.state.todolist.length;\n    let last;\n    if (numm < 1) {\n      numm = 1;\n      last = 0;\n    } else {\n      last = this.state.todolist[numm - 1];\n    }\n    this.state.todolist[numm - 1].title = titled;\n    this.state.todolist[numm - 1].description = descriptioned;\n\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      titled,\n      descriptioned,\n      completed: false\n    }).then(result =>\n      this.setState({\n        todolist: [...this.state.todolist]\n      })\n    );\n    console.log(\n      this.state.todolist[numm - 1].title,\n      this.state.todolist[numm - 1].description,\n      this.state.todolist\n    );\n  };\n\n  add = (titled, descriptioned) => {\n    let numm = this.state.todolist.length;\n    let last;\n    if (numm < 1) {\n      numm = 1;\n      last = 0;\n    } else {\n      last = this.state.todolist[numm - 1].id;\n    }\n\n    //this.state.todolist[numm - 1].id = uuid.v4();\n\n    let newdoer = {\n      id: \"\",\n      title: \"\",\n      completed: false,\n      description: \"\"\n    };\n\n    this.setState({\n      todolist: [...this.state.todolist, newdoer]\n    });\n    //console.log(titled, descriptioned);\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <div className=\"container\">\n                <AddTodo add={this.add} update={this.update} />\n                <Todos\n                  changed={this.changeder}\n                  onremove={this.remove}\n                  todo={this.state.todolist}\n                />\n              </div>\n            )}\n          />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}